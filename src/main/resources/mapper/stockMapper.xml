<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cyb.goodsms.dao.StockMapper" >
  <resultMap id="BaseResultMap" type="com.cyb.goodsms.domain.Stock" >
    <constructor >
      <arg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="supplier_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="supplier_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goods_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="goods_category" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="stock_in_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="carNo" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_date_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_date_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>

  <select id="selectByExample" resultMap="BaseResultMap">
    select
    *
    from stock where 1 = 1
    <if test="record.supplierName != null" >
      and supplier_name like concat('%',#{record.supplierName, jdbcType=VARCHAR}, '%')
    </if>
    order by update_date_time desc, create_date_time desc
    <if test="pagination != null and pagination.pageIndex != null and pagination.limit != null">
      limit #{pagination.pageIndex, jdbcType=INTEGER}, #{pagination.limit, jdbcType=INTEGER}
    </if>
  </select>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from stock where id = #{id, jdbcType=VARCHAR};
  </select>

  <delete id="deleteById" parameterType="java.lang.String" >
    delete from stock where id = #{id, jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.cyb.goodsms.domain.Stock" >
    insert into stock (id, supplier_name, supplier_phone, 
      goods_name, goods_category, stock_in_count, 
      carNo, create_date_time, update_date_time
      )
    values (#{id,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, #{supplierPhone,jdbcType=VARCHAR}, 
      #{goodsName,jdbcType=VARCHAR}, #{goodsCategory,jdbcType=VARCHAR}, #{stockInCount,jdbcType=INTEGER}, 
      #{carNo,jdbcType=VARCHAR}, #{createDateTime,jdbcType=TIMESTAMP}, #{updateDateTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <select id="countByExample" parameterType="com.cyb.goodsms.domain.Stock" resultType="java.lang.Integer" >
    select count(*) from stock
    <if test="supplierName != null" >
      and name like concat('%',#{supplierName, jdbcType=VARCHAR}, '%')
    </if>
  </select>

  <update id="updateById" parameterType="com.cyb.goodsms.domain.Stock" >
    update stock
    <set >
      <if test="record.supplierName != null" >
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierPhone != null" >
        supplier_phone = #{record.supplierPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsCategory != null" >
        goods_category = #{record.goodsCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.stockInCount != null" >
        stock_in_count = #{record.stockInCount,jdbcType=INTEGER},
      </if>
      <if test="record.carNo != null" >
        carNo = #{record.carNo,jdbcType=VARCHAR},
      </if>
      <if test="record.createDateTime != null" >
        create_date_time = #{record.createDateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDateTime != null" >
        update_date_time = #{record.updateDateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
</mapper>